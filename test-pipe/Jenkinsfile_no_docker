pipeline {
    agent {
        label params.AGENT_LABEL
    }
    stages {
        stage('Copy Artifacts') {
            steps {
                script {
                    step ([$class: 'CopyArtifact',
                    selector: buildParameter("${BUILD_SELECTOR}"),
                    projectName: JDK_BUILD_JOB,
                    filter: "test.zip",
                    target: 'sapmachine']);
                }
                sh 'cd sapmachine && unzip test.zip'
                sh '''
                    BUNDLE=`ls sapmachine/bundles/*jdk-*`
                    unzip "${BUNDLE}" -d testJDK
                '''
                script {
                    step ([$class: 'CopyArtifact',
                    projectName: 'jtreg',
                    filter: "jtreg.zip",
                    target: 'sapmachine']);
                }
                sh 'cd sapmachine && unzip jtreg.zip'
            }
        }
        stage('Run jtreg') {
            environment {
              SCIMARK_2_CP = '/opt/scimark2/scimark2lib.jar'
              TEST_GROUPS = "${params.test_groups}"
              TEST_SUITE = "${params.test_suite}"
              BASE = pwd()
              JT_HOME="${BASE}/sapmachine/jtreg"
	      TEST_JDK = "${BASE}/testJDK/" + sh (script: 'ls "${BASE}/testJDK/"',returnStdout: true).trim()
	      
	      TEST_NATIVE_LIB = "${BASE}/test/"${params.test_suite}"/jtreg/native"
	      JT_JAVA = "${TEST_JDK}"
            }
            steps {
                script {
                    sh "${JT_HOME}/bin/jtreg -dir:${BASE}/sapmachine/test/${TEST_SUITE} -xml -verbose:summary \
                    -exclude:${BASE}/sapmachine/test/${TEST_SUITE}/ProblemList.txt -exclude:${BASE}/sapmachine/test/${TEST_SUITE}/ProblemList-SapMachine.txt \
                    -conc:auto -vmoption:-Xmx640m \
                    -a -ignore:quiet -timeoutFactor:5 -agentvm -testjdk:${TEST_JDK} ${TEST_GROUPS} "
                }
            }
        }
        stage('Publish jtreg report') {
            steps {
                junit 'JTwork/**/*.jtr.xml'
                sh '''
                    ls -l
                    mkdir test_report
                    ls -l
                    mv JTreport test_report
                    ls -l test_report/*
                    mv JTwork test_report
                '''

                publishHTML target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'test_report',
                    reportFiles: 'JTreport/index.html',
                    reportName: 'JT Report'
                ]


                archive 'JTwork/**/hs_err_pid*.log'
            }
        }
    }
    post {
        always {
            cleanWs deleteDirs: true, disableDeferredWipeout: true, skipWhenFailed: true
        }
    }
}
