pipeline {
    agent {
        label params.AGENT_LABEL
    }
    stages {
        stage('Copy Artifacts') {
            steps {
                script {
                    step ([$class: 'CopyArtifact',
                    selector: buildParameter("${BUILD_SELECTOR}"),
                    projectName: JDK_BUILD_JOB,
                    filter: "test.zip",
                    target: 'sapmachine']);
                }
                sh 'cd sapmachine && unzip -q test.zip'
                sh '''
                    BUNDLE=`ls sapmachine/bundles/*jdk-*`
                    unzip -q "${BUNDLE}" -d testJDK
                '''
                script {
                    step ([$class: 'CopyArtifact',
                    projectName: 'jtreg',
                    filter: "jtreg.zip",
                    target: 'sapmachine']);
                }
                sh 'cd sapmachine && unzip -q jtreg.zip'
            }
        }
        stage('Run jtreg') {
            environment {
              SCIMARK_2_CP = '/opt/scimark2/scimark2lib.jar'
            }
            steps {
                sh """
                    BASE=`pwd`
                    JDK_DIR=`ls \${BASE}/testJDK/`
                    JT_HOME=\${BASE}/sapmachine/jtreg
                    TEST_JDK=\${BASE}/testJDK/\${JDK_DIR}
                    TEST_NATIVE_LIB=\${BASE}/test/${params.test_suite}/jtreg/native
                    JT_JAVA=\${TEST_JDK}
                    \${JT_HOME}/bin/jtreg -dir:\${BASE}/sapmachine/test/${params.test_suite} -xml -verbose:summary \\
                    -exclude:\${BASE}/sapmachine/test/${params.test_suite}/ProblemList.txt \\
                    -exclude:\${BASE}/sapmachine/test/${params.test_suite}/ProblemList-SapMachine.txt \\
                    -conc:auto -vmoption:-Xmx640m \\
                    -a -ignore:quiet -timeoutFactor:5 -agentvm -testjdk:\${TEST_JDK} ${params.test_groups}
                """
            }
        }
        stage('Publish jtreg report') {
            steps {
                sh "python lib/jtreg_to_junit.py test_report_${params.test_suite}/JTreport/text/summary.txt junit_report.xml \"${params.test_suite}/${params.test_groups}\""

                publishHTML target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: "test_report_${params.test_suite}",
                    reportFiles: 'JTreport/index.html',
                    reportName: 'JT Report'
                ]

                junit 'junit_report.xml'

                archive "test_report_${params.test_suite}/JTwork/**/hs_err_pid*.log"
            }
        }
    }
    post {
        always {
            cleanWs deleteDirs: true, disableDeferredWipeout: true
        }
    }
}
