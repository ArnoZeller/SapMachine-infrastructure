<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.26">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.59">
    <script>pipeline {
    agent {
        label &quot;linux_x86_64&quot;
    }
    stages {
        stage(&apos;Create some files&apos;) {
            agent {
                docker { 
                    image &apos;ubuntu:14.04&apos;
                    reuseNode true 
                }
            }
            steps {
                sh &quot;echo $PWD&quot;
                sh &quot;touch test&quot;
                sh &apos;echo &quot;foobar&quot; &gt;&gt; test&apos;
                sh &quot;ls -la&quot;
            }
        }
    }
    post {
        always {
            /*script {
                def image = docker.image(&apos;ubuntu:14.04&apos;)
                image.inside() {
                        sh &quot;echo $PWD&quot;
                        sh &quot;ls -la&quot;
                        sh &quot;rm -rf *&quot;
                }
                
            }*/
            
            sh &quot;echo $PWD&quot;
            sh &quot;ls -la&quot;
            sh &quot;rm -rf *&quot;
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>