pipeline {
    agent any
    stages {
        stage('Genrate Dockerfiles') {
            environment {
              SAPMACHINE_GIT_REPO = 'github.com/SAP/SapMachine.git'
              SAPMACHINE_GIT_BRANCH = 'sapmachine'
              SAPMACHINE_ARCHIVE_NAME_PREFIX = 'sapmachine_linux-x64'
              SAPMACHINE_PUBLISH_GITHUB_TOKEN = credentials('SapMachine-Github-Token')
              SAPMACHINE_PUBLISH_GITHUB_REPO_NAME = 'SapMachine'
              SAPMACHINE_PUBLISH_GITHUB_USER = 'SAP'
            }

            steps {
              withCredentials([
                  [$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD'],
                  ]
                  ) {
                sh '''
                  docker/generate_dockerfile.sh -r
                  docker/generate_dockerfile.sh
                  docker/generate_dockerfile.sh -r -t
                  docker/generate_dockerfile.sh -t
                  '''
                }
            }
        }
        stage('Run Tests') {
          when {
            expression { params.RUN_TESTS == true }
          }
          steps {
            build job: HOTSPOT_TEST_JOB, propagate: false, wait: true
            build job: JDK_TEST_JOB, propagate: false, wait: true
            build job: LANGTOOLS_TEST_JOB, propagate: false, wait: true
          }
        }
        stage ('Publish Images') {
          steps {
            withCredentials([
                [$class: 'UsernamePasswordMultiBinding', credentialsId: 'docker-sapmachine', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD']
                ]
                ) {
              sh '''
                docker/build-and-push.sh
                docker/build-and-push.sh jre
                '''
              }
            }
        }
    }
}
